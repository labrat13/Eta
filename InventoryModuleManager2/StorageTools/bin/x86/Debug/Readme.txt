18 ноября 2018
Файл описания проекта StorageTools

Этот проект для утилиты, которая должна будет содержать различные процедуры для работы с Хранилищами.
Хотя лучше бы встроить их в приложение-браузер Хранилищ.
Но это определимся позже.

Описание процедур, которые можно выполнить данной утилитой

1. Создать Хранилище
Процедура создает новое пустое Хранилище.

Хранилище представляет собой несколько файлов и каталогов, которые помещаются в некотором каталоге.
Пользователю незачем что-либо делать внутри этого каталога.
Нужно указать каталог, в котором (или из которого) будет создано Хранилище.

В появившемся диалоге Свойства Хранилища нужно ввести значения для нового хранилища:
- Название: КнигаЭкономика - название Хранилища.
- Квалифицированное имя: Книга.КнигаЭкономика - квалифицированное название Хранилища в моей нотации квалификационных названий. Смю мою нотацию.
- Описание: Книги по Экономике - свободный, но краткий текст описания назначения хранилища
- Класс хранилища: Книга::КнигаЭкономика<Документ, Изображение> - это класс содержимого Хранилища в моей нотации классов. См. мою нотацию классов.
- Каталог Хранилища: C:\Temp\Datasheets - путь к каталогу создаваемого Хранилища

Сначала надо определиться с содержимым хранилища. 
Все содержимое должно относиться к подклассам одного класса Сущностей.
Этот класс сущностей должен быть указан в поле Класс Хранилища.
И в каждой записи о Сущности в этом Хранилище должен быть указан класс Сущности как путь либо от корня всей классификации  Сущностей.
(ее пока нет, не сделана), либо как путь от Класс Хранилища до Класс сущности, при этом Класс Хранилища подставляется кодом, если не указан явно.
Это сложная для понимания штука нужна для того, чтобы Записи в Хранилище принадлежали одному дереву классов.

Соответственно этой методологии, квалифицированное имя отражает Класс Хранилища, да и название Хранилища тоже. Так удобнее получается.
Описание Хранилища - используется при просмотре свойств Хранилища в списке Хранилищ, поэтому должно быть кратким и понятно описывать суть и особенности Хранилища. 



2. Добавить Книги
Эта процедура добавляет книги в указанное Хранилище.
Предварительно файлы книг должны быть подготовлены.

Подготовка:
1) Структура каталогов: Книги группированы по папкам. Обычно по отраслям или темам.
  Предполагается что все книги в папке относятся к одному классу.
  Этот класс указывается потом в диалоге свойств книги. 
2) файлы книг:
- регистр символов в названиях файлов книг не изменяется при помещении книги в Хранилище.
- названия файлов должны быть очищены от неправильных символов |\/ итп.
- для каждой книги желательно изготовить файлы-компаньоны:
 Файл изображения - обычно это изображение обложки книги.
 Файл описания - обычно содержит описание и библиотечные данные книги, оглавление.
- файлы-компаньоны должны быть с тем же названием что и файл книги, отличаясь лишь расширением. 
- файлы-компаньоны описания должны быть в кодировке Windows-1251.
3) документы-картинки и документы-текстовые файлы должны быть упакованы в zip-архив.
  Иначе они будут игнорироваться процедурой или считаться файлами-компаньонами одноименных файлов документов, если такие есть.
  Следует удалять их исходные версии после помещения в архив, чтобы они не стали файлами-компаньонами архиву.
4) файлы с расширениями ".pdf", ".djv", ".djvu", ".doc", ".rtf", ".xls", ".zip", ".chm", ".7z" считаются документами.
  файлы с расширениями ".gif", ".jpg", ".jpeg", ".tiff", ".png" считаются компаньонами-изображениями
  файлы с расширениями ".txt", ".diz" считаются компаньонами-описаниями 

Процедура:
- указать каталог с подготовленными файлами книг.
- указать каталог с Хранилищем
- В диалоге свойств Книги нужно указать класс сущности для книги.
  Это значение затем запоминается и далее используется до конца процедуры, для всех книг.
- В диалоге свойств Книги можно изменить название или описание книги.
- если текст описания с неправильной кодировкой, следует вручную найти файл описания, 
   открыть в правильном редакторе, скопировать и внести правильный текст.   

3. Добавить Даташиты
Эта процедура добавляет даташиты в указанное Хранилище.
Предварительно файлы документов должны быть подготовлены.

Подготовка:
Требования к файлам даташитов:
1) Структура каталогов: каталоги используются как классы деталей.
Есть одна корневая папка с любым названием, например, документы.
В ней подпапки - классы верхнего уровня. 
В них вложенные папки - вложенные классы. И так далее по иерархии классов.
Файлы располагаются в той папке, классу которой принадлежат детали.
Классы автоматически будут вписываться в свойства сущности, 
 и не нужно показывать диалог свойств Сущности. Так как он требует ручного ввода класса Сущности, это замедляет работу.
 
Пример:
+С:\Temp\Документы
    +Микросхемы
         +Микропроцессоры
             -Z80.pdf
		 -AN5512.pdf   
		 
2) Имена файлов: названия деталей очищенные от неправильных символов |\/ итп.
- если в даташите несколько деталей, они указываются в названии файла, разделенные пробелом.
- пробелы в названии детали не допускаются.
- регистр символов названия детали может быть любым. 
  При записи в Хранилище символы названия детали переводятся в верхний регистр.
- В названиях деталей, содержащих мю, обычно первым символом, - мю заменяется на u маленькую.
  И если первая буква это u, то она не переводится в верхний регистр при обработке имен файлов.
- названия файлов короче 2 символов не допускаются.
- допускаются .,-_+= и русские буквы в названии детали
Пример: КТ315А КТ315Б КТ315В КТ315Г.pdf
- если такое имя файла уже есть в каталоге, к текущему имени файла добавляется пробел и одна цифра или буква.
  Имена деталей, состоящие из 1 буквы или цифры, игнорируются кодом.
Пример: КТ315А КТ315Б КТ315В КТ315Г 1.pdf

3) допускаются файлы-компаньоны, как для книг - Описания и Изображения, по одной штуке.
  Они должны называться так же, как и файл документа, отличаясь лишь расширением.
4) документы-картинки и документы-текстовые файлы должны быть упакованы в zip-архив.
  Иначе они будут игнорироваться процедурой или считаться файлами-компаньонами одноименных файлов документов, если такие есть.
  Следует удалять их исходные версии после помещения в архив, чтобы они не стали файлами-компаньонами архиву.
5) файлы с расширениями ".pdf", ".djv", ".djvu", ".doc", ".rtf", ".xls", ".zip", ".chm", ".7z" считаются документами.
  файлы с расширениями ".gif", ".jpg", ".jpeg", ".tiff", ".png" считаются компаньонами-изображениями
  файлы с расширениями ".txt", ".diz" считаются компаньонами-описаниями  
6) для файлов pdf можно сторонней утилитой извлечь метаданные - описание файла и разные там его свойства.
  Нужно использовать утилиту MyPdfInfoReader.exe. 
  Она читает все файлы pdf в указанном каталоге и извлекает из них описания в файл result.csv
  Эти данные обычно содержат много мусора, который надо вручную удалить в Excel 2003.
  Первый столбец должен содержать путь к файлу, второй и остальные считаются описанием документа, деталей в нем.
  Этот файл после переработки надо поместить в корневой каталог даташитов(Здесь: папка Документы)
     
Процедура:
- указать каталог с подготовленными файлами даташитов.
- указать каталог с Хранилищем.
- в каталоге с файлами даташитов должен быть CSV-файл описания деталей
Его нужно сделать из описаний-метаданных pdf-файлов утилитой ???.
Затем нужно вручную отредактировать данные (убрать мусор) и поместить в корень каталога с даташитами
как result.csv.
Если файл описания деталей не будет найден, программа выведет сообщение об этом. 
Если затем подтвердить выполнение процедуры, описания деталей не будут браться из этого файла.
(Что очевидно, поскольку его нет).
Но они могут загружаться из текстового файла-компаньона документа, как это сделано для книг.
Также, файл-компаньон изображения детали, если существует, автоматически добавляется к записи Сущности.
Тоже, как для книг. 

4. Проверить Хранилище
Выполняет проверку содержимого указанного хранилища: возможность извлечь из него каждый файл.
Следует использовать эту проверку перед добавлением новых файлов в Хранилище и после добавления.
Поскольку иногда в процессе добавления происходят ошибки, и файлы в архив записываются неправильно.
Тогда любой архиватор при тестировании архива выдает сообщение о повреждении файла в архиве.

Процедура последовательно читает из Хранилища все файлы документов и изображений, при извлечении из архива проверяется их целостность.
Если все хорошо, выводится сообщение о успешном завершении операции.
Если есть ошибки, выводится лишь первая из них.
- Это недостаток процесса. Можно бы и все ошибки обнаружить и вывести вместе. С другой стороны, если есть одна ошибка, Хранилище надо заменить исправным из резервной копии данных.

 



-------------------------------------------------------------------
Что нужно реализовать здесь:
- Создание структуры каталогов по структуре классов Хранилища
- Групповое добавление книг в указанное Хранилище.
  - книги должны быть форматированы в соответствии с установленным требованиями
  + сделано, тестировалось.
    - диалог свойств документа аляповат, надо бы переделать или совместить с формой карточки Сущности из StorageSearch ?
    - есть ошибка движка из-за почти одинаковых имен файлов
    - если при работе возникает ошибка, надо заново все начинать. Поэтому добавление надо делать в копию Хранилища, а не в основное Хранилище сразу.
      Чтобы можно было откатиться к старой версии Хранилища и начать все заново.
    - после успешного добавления хорошо бы проверить Хранилище, но этой функции еще нет у меня. Надо ее сделать.
    - если категорию не указать, в движке возникает ошибка. Надо это в коде приложения обработать.   
- Групповое добавление даташитов в указанное Хранилище
  - даташиты должны быть форматированы в соответствии с установленным требованиями
  + сделано, тестировалось.
  - добавлен флаг Boolean showDialog - Показывать диалог свойств Сущности - показывать диалог для каждого документа или автоматически обрабатывать всю кучу файлов.
    Для даташитов - я устал тыкать в ОК на форме 1600 раз подряд.
    - он локальный сейчас. Хорошо бы сделать его глобальным и вынести в Настройки программы. Чтобы пользователь мог его конфигурировать.
      Или через гуй включать и выключать.
- надо список расширений файлов вынести в НастройкиПрограммы, чтобы пользователь мог их изменять для своей ситуации.      
- Просмотр и изменение свойств существующего Хранилища
- Тестирование целостности Хранилища, в том числе, файлов.
  + сделано, тестировалось.
  - но показывает только первую ошибку.
  - и выводит не как неисправный файл, а как возникшее исключение 
    - надо правильно представить пользователю неисправность в Хранилище.
- получение списка классов в Хранилище и их мощности (количества объектов этого класса)
  - в виде ксв-файла, сортировать по алфавиту.
- Определение, есть ли уже такой файл в Хранилище
  - для документов
  - для изображений 

Часть этих функций уже реализованы в ExtractEntityTypes и ZipArchiveBookChecker и OtherConverters 
 и RemoveExistingDatasheets и CreateFoldersByClasses проектах. 
 Их надо удалить из солюшена по окончании работ над утилитой.
 А то слишком много этих временных проектов в солюшене стало.